{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Card","props","className","onClick","suffleCard","id","alt","name","src","image","Wrapper","children","Title","message","score","highscore","App","state","cards","alertMessage","gameStart","setState","forEach","card","count","gameOver","find","i","this","console","log","sort","Math","random","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"i4CAaeA,MAVf,SAAcC,GACZ,OACE,yBAAKC,UAAU,gCAAgCC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MACnF,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,W,MCA1BC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,WCW1BC,G,MAZD,SAAAX,GACZ,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,uCAAuCD,EAAMU,UAC5D,yBAAKT,UAAU,iCAAiCD,EAAMY,SACtD,yBAAKX,UAAU,wCAAf,UACUD,EAAMa,MADhB,eACmCb,EAAMc,c,OCiFhCC,E,2MAlFbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,UAAW,EACXI,aAAa,CACX,2BACA,qC,EAQJC,UAAY,WACN,EAAKH,MAAMH,MAAQ,EAAKG,MAAMF,WAChC,EAAKM,SAAS,CAACN,UAAW,IAE5B,EAAKE,MAAMC,MAAMI,QAAQ,SAAAC,GACvBA,EAAKC,MAAQ,IAEf,EAAKH,SAAS,CAACP,MAAO,K,EAIxBW,SAAW,WAQT,OAPI,EAAKR,MAAMH,MAAQ,EAAKG,MAAMF,WAChC,EAAKM,SAAS,CAACN,UAAW,EAAKE,MAAMH,QAEvC,EAAKG,MAAMC,MAAMI,QAAQ,SAAAC,GACvBA,EAAKC,MAAQ,IAEf,EAAKH,SAAS,CAACP,MAAO,KACf,G,EAGTV,WAAa,SAAAC,GACT,EAAKY,MAAMC,MAAMQ,KAAK,SAACH,EAAMI,GAC3B,GAAIJ,EAAKlB,KAAOA,EAAK,CACnB,GAAuB,IAApBa,EAAMS,GAAGH,MAOV,OANAN,EAAMS,GAAGH,MAAQN,EAAMS,GAAGH,MAAQ,EAClC,EAAKH,SAAS,CAACP,MAAQ,EAAKG,MAAMH,MAAQ,GAAI,WAC5Cc,KAAKP,SAAS,CAACR,QAASe,KAAKX,MAAME,aAAa,KAChDU,QAAQC,IAAIF,KAAKX,MAAMH,SAEzB,EAAKG,MAAMC,MAAMa,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAEP,EAAKR,WACL,EAAKJ,SAAS,CAACR,QAAS,EAAKI,MAAME,aAAa,KAGpD,OAAO,K,mFAzCXS,KAAKR,c,+BA8CG,IAAD,OACP,OAEA,kBAAC,EAAD,KAEI,kBAAC,EAAD,CAAON,MAAOc,KAAKX,MAAMH,MAAOC,UAAWa,KAAKX,MAAMF,UAAWF,QAASe,KAAKX,MAAMJ,SAArF,eACA,8BAKCe,KAAKX,MAAMC,MAAMgB,IAAI,SAAAX,GAAI,OACxB,kBAAC,EAAD,CACEnB,WAAY,EAAKA,WACjBC,GAAIkB,EAAKlB,GACT8B,IAAKZ,EAAKlB,GACVE,KAAMgB,EAAKhB,KACXE,MAAOc,EAAKd,e,GA3EN2B,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.277ff933.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div className='card animated bounce delay-2s' onClick={() => props.suffleCard(props.id)}>\n      <div className='img-container'>\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className='wrapper'>{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Title = props => {\n  return (\n    <div className='row header'>\n      <div className='col-lg-4 col-sm-4 title text-center'>{props.children}</div>\n      <div className='col-lg-4 col-sm-4 text-center'>{props.message}</div>\n      <div className='col-lg-4 col-sm-4 scores text-center'>\n        Score: {props.score} Highscore: {props.highscore}\n      </div>\n    </div>\n  );\n};\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\n//import Jumbotron from \"./components/Jumbotron\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  state = {\n    cards,\n    score: 0,\n    highscore: 0,\n    alertMessage:[\n      \"Your Guess is correct!!!\",\n      \"Incorrect Guess\\n\\n Game Over!!!\"\n    ]\n  };\n\n  componentDidMount () {\n    this.gameStart();\n  };\n\n  gameStart = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: 0});\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    this.setState({score: 0});\n  }\n\n\n  gameOver = ()=>{\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score});\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    this.setState({score: 0});\n    return true;\n  }\n\n  suffleCard = id =>{\n      this.state.cards.find((card, i) => {\n        if (card.id === id ) {\n          if(cards[i].count  === 0 ){\n            cards[i].count = cards[i].count + 1;\n            this.setState({score : this.state.score + 1}, function(){\n              this.setState({message: this.state.alertMessage[0]})\n              console.log(this.state.score);\n            });\n            this.state.cards.sort(() => Math.random() - 0.5)\n            return true;\n          } else {\n            this.gameOver();\n            this.setState({message: this.state.alertMessage[1]})\n          }\n        }\n        return false;\n    });\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return (\n\n    <Wrapper>\n\n        <Title score={this.state.score} highscore={this.state.highscore} message={this.state.message}>Clicky Game</Title>\n        <div>\n        {/* <Jumbotron/> */}\n        </div>\n\n\n        {this.state.cards.map(card => (\n          <Card\n            suffleCard={this.suffleCard}\n            id={card.id}\n            key={card.id}\n            name={card.name}\n            image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}